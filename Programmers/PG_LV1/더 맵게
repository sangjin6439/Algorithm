이 문제는 리스트로 풀려고 하면 까다로워 진다. + 효율성 통과 못함
우선순위 큐를 만들어서 작은 숫자끼리 합쳐서 K 숫자를 넘으면 되는 문제
우선순위를 사용한다는 것만 생각하면 쉽다

```
import java.util.*;
class Solution {
    public int solution(int[] scoville, int K) {
        //우선 순위가 낮은 숫자부터 나옴
        PriorityQueue<Integer> pq = new PriorityQueue<>();
        
        for(int i: scoville){
            pq.offer(i);
        }
        
        int count =0;
        while(pq.peek()<K){
            if(pq.size()==1){
                count= -1;
                break;
            }
            pq.offer(pq.poll()+(pq.poll()*2));
            count++;
        }
        return count;
    }
}
```
