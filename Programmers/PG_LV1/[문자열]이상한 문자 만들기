이 문제는 처음에 split(" ")으로 문자열로 끊아서 진행했다. 
아래처럼 StringBuilder를 두번 사용해서 문자열을 만들어서 구현했다. 이것보다 

```
class Solution {
    public String solution(String s) {
        String a = s.toLowerCase();
        StringBuilder sb = new StringBuilder();
        
        String[] an = a.split(" ", -1); // 끝에 있는 공백도 포함해서 분할
        for (int idx = 0; idx < an.length; idx++) {
            StringBuilder insb = new StringBuilder();
            for (int j = 0; j < an[idx].length(); j++) {
                if (j % 2 == 0) {
                    insb.append(Character.toUpperCase(an[idx].charAt(j)));
                } else {
                    insb.append(an[idx].charAt(j));
                }
            }
            sb.append(insb);
            // 마지막 요소가 아니라면 공백 추가
            if (idx < an.length - 1) {
                sb.append(" ");
            }
        }
        
        return sb.toString();
    }
}

```

```
class Solution {
public String solution(String s) {
// 짝수 대문자 홀수 소문자
String answer = "";
//짝수 홀수 확인용
int cnt = 0;
//한 단어씩 나누기, 공백을 만나면 문자열이 끝나는거니 짝수홀수 초기화하기
String[] an = s.split("");


    for(String i : an){
        if(i.equals(" ")){
            cnt = 0;
        } else{
            cnt ++;
        }
        
        if(cnt % 2 != 0) {
            answer += i.toUpperCase();
        } else {
            answer += i.toLowerCase();
        }
    }
    
    return answer;
}
}
``` 
이렇게 하면 더 간결한 코드가 된다. 문자열을 한뭉태기로 끊는게 아니라 하나씩 char와 같이 공백포함 하나씩 끊아서 공백을 만나면 cnt가 초기화되고 짝수면 대문자 홀수면 소문자를 넣기로 햇다.
cnt가 0부터 시작이라서 0 1 2 이런식이라 cnt % 2 !=0이게 짝수이다.
