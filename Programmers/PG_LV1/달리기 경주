주석처리된 부분이 처음에 작성했던 코드이다. 값은 똑같이 나왔지만 자료구조의 특성상 Map으로 구현해야 시간 복잡도가 줄어든다.
그렇게 어려운 구현은 아니였다.

import java.util.*;
class Solution {
    public String[] solution(String[] players, String[] callings) {
      
        Map<String,Integer> m= new HashMap<>();
        int index=0;
        for(String x: players){
            m.put(x,index++);
        }
        
        for(String x : callings){
            
            int num = m.get(x).intValue();
            
            String tmp = players[num-1];
            players[num-1] = players[num];
            players[num]=tmp;
            
            m.put(x,num-1);
            m.put(tmp,num);
        }
        return players;
        
        
//         String[] answer = new String[players.length];

//         ArrayList<String> list= new ArrayList<>();
        
//         for(int i=0; i<players.length; i++){
//             list.add(players[i]);
//         }
        
//         for(int i=0; i<callings.length; i++){
//             int listNum= list.indexOf(callings[i]);
//                 String tmp = list.get(listNum-1);
//                 list.set(listNum-1,list.get(listNum));
//                 list.set(listNum,tmp);
//       }
//         for(int i=0; i<list.size(); i++){
//             answer[i]=list.get(i);
//         }
//         return answer;
    }
}
