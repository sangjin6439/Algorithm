import java.util.*;

class Solution {
    public int solution(int bridge_length, int weight, int[] truck_weights) {
        int answer = 0;
        int bridgeWeight =0; //다리 위의 무게
        int idx=0; //대기 트럭의 인덱스 번호
        
        Queue<Integer> bridge = new LinkedList<>();
        //트럭이 없을 때 처럼 0으로 초기화
        for(int i=0; i<bridge_length; i++){
            bridge.add(0);
        }
        //모든 트럭이 다리에 진입할 때 까지 반복
        while(idx<truck_weights.length){
            answer++;
            
            //다리에서 대기중인 트럭을 빼준다.
            bridgeWeight -= bridge.poll();
        //다음에 들어올 트럭과 현재 다리에 있는 트럭의 무게와 합했을 때 weight보다 작으면 트럭 추가로 진입
        if(bridgeWeight+ truck_weights[idx]<=weight){
            bridge.add(truck_weights[idx]);
            bridgeWeight+=truck_weights[idx];
            idx++;
        }else bridge.add(0); // 무게 초과할 시 트럭을 앞으로 빼주고 0을 넣음
        }
        //마지막에 남은 트럭을 빼줌
        answer += bridge_length;
        
        return answer;
    }
}
