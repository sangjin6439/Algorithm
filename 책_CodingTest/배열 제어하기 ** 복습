정수 배열을 받고, 중복을 제거하고, 내림차순 한다.
-> 내림 차순 까먹어서 실패..

'''
public class CodingTest {
    public static void main(String[] args) {
        int[] arr = {4,2,2,1,3,4};

        Arrays.sort(arr); <- 이건 오름 차순인데 내림 차순 생각안났음.
        List<Integer> na = new ArrayList<>();

       na.add(arr[0]);


        for(int i =1; i<arr.length; i++){
           if(arr[i]!=arr[i-1]){
               na.add(arr[i]);
           }
        }

        System.out.println(na);

    }
}
'''

정답
'''
import java.util.*;

class Solution {
    public int[] solution(int[] arr) {

//이렇게 안하고 Integer[] result = Arrays.stream(arr).boxed().distinct().sorted(Comparator.reverseOrder()).toArray(Integer[]::new);이렇게 한 줄로 가능

        Integer[] result = Arrays.stream(arr).boxed().distinct().toArray(Integer[]::new);
        Arrays.sort(result, Collections.reverseOrder());

        return Arrays.stream(result).mapToInt(Integer::intValue).toArray();
    }
}
''' 스트림을 이용해서 중복메서드를 O(n)까지 줄였다 그냥 구현하면 O(n제곱)만큼의 시간이 들어간다. 스트림 활용이 어려웠다.
