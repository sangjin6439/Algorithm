package org.jpa;

import java.util.PriorityQueue;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) {

        Scanner sc = new Scanner(System.in);
        int N = sc.nextInt(); //N개의 정수
        int outCount = 0; //출력되는 개수를 저장
        int[] arr = new int[N];
        for (int i = 0; i < arr.length; i++) {
            arr[i] = sc.nextInt();
            if (arr[i] == 0) { // arr[i]가 0일 때의 개수 만큼 출력
                outCount++;
            }
        }
    //우선순위 큐를 사용하여 값들이 알아서 정렬이 되도록 구현
        PriorityQueue<Integer> pq = new PriorityQueue<>((a,b)-> {
            int A = Math.abs(a);
            int B = Math.abs(b);
            if(A!=B) return A-B;
            return a-b;
        });

        int[] answer = new int[outCount];
        int p = 0;

        for (int i = 0; i < N; i++) {
            if (arr[i] == 0) { //arr[i]가 0일 때 값을 비교
                if (pq.isEmpty()) { //pq가 비어있으면 0을 출력
                    answer[p] = 0;
                } else {
                    answer[p] = pq.poll(); //절대값이 가장 작은 값을 출력
                }
                p++;
            } else {
                pq.add(arr[i]);
            }
            if (p == outCount) break; //출력되는 값이 모두 찼으면 반복문 저장
        }
        for (int x : answer) {
            System.out.println(x);
        }
    }
}
